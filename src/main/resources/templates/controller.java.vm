package ${package.Controller};


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import org.springframework.web.bind.annotation.*;
import org.apache.commons.lang3.StringUtils;
import javax.annotation.Resource;
import java.util.List;

import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
       @Resource
       private ${table.serviceName} ${table.entityPath}Service;

       /*
       新增或者修改
        */
       @PostMapping("/save")
       public Boolean save(@RequestBody ${entity} ${table.entityPath}) {
           return ${table.entityPath}Service.addUp(${table.entityPath});
        }

        /*
        根据ID删除
         */
       @DeleteMapping("/delete/{id}")
       public Boolean delete(@PathVariable Integer id) {
           return ${table.entityPath}Service.deletById(id);
        }

        /*
        批量删除
        */
       @PostMapping("/delete/Batch")
       public Boolean deleteBatch(@RequestBody List<Integer> ids){
           return ${table.entityPath}Service.deleteBatch(ids);
        }

        /*
        查询所有信息
         */
       @GetMapping
       public List<${entity}> findAll() {
           return ${table.entityPath}Service.query${table.entityName}();
        }

        /*
        根据id查询
         */
       @GetMapping("queryId/{id}")
       public ${entity} findOne(@PathVariable Integer id) {
           return ${table.entityPath}Service.queryById(id);
        }

        /*
        分页查询
         */
       @GetMapping("/page")
       @ResponseBody
       public Page<${entity}> findPage(@RequestParam Integer pageNum,
                                       @RequestParam Integer pageSize,
                                 QueryWrapper<${entity}> queryWrapper) {

           queryWrapper = new QueryWrapper<>();
           queryWrapper.orderByDesc("id");
           return ${table.entityPath}Service.queryPage(pageNum, pageSize,queryWrapper);
        }

}

#end